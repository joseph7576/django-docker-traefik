version: '3.8'

services:
  nexus:
    image: sonatype/nexus3:3.61.0
    container_name: nexus 
    restart: always
    volumes:
      - "nexus-data:/nexus-data"
    depends_on:
      - traefik
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.rule=Host(`nexus.visaroads.com`)"
      - "traefik.http.routers.nexus.tls=true"
      - "traefik.http.routers.nexus.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nexus.service=nexus"
      - "traefik.http.services.nexus.loadbalancer.server.port=8081"

      - "traefik.http.routers.nexus-docker.rule=Host(`docker.visaroads.com`)"
      - "traefik.http.routers.nexus-docker.tls=true"
      - "traefik.http.routers.nexus-docker.tls.certresolver=letsencrypt"
      - "traefik.http.routers.nexus-docker.service=nexus-docker"
      - "traefik.http.services.nexus-docker.loadbalancer.server.port=5000"

  traefik:
    image: traefik:app
    container_name: traefik
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.visaroads.com`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=joe:$$apr1$$8y0lHbQ1$$X7wATyOnJ4fqoZTGY8UYm1"

volumes:
  traefik-public-certificates:
    name: traefik-certificates
  nexus-data:
    name: nexus-data

networks:
  traefik:
    name: traefik
